"use client";
import { createRegistration } from "@/actions/runs";
import Form, { FormRender, FormState } from "@/components/form/form";
import { Button } from "@/components/ui/button";
import { Registration } from "@prisma/client";
import React, { useState } from "react";

export default function Register() {
  const [step, setStep] = useState(1);
  const fields = [
    { name: 'runId', type: 'hidden' },
    { name: "firstName", label: "First name" },
    { name: "lastName", label: "Last name" },
    {
      name: "gender",
      type: "select",
      label: "Gender",
      options: [
        { label: "Man", value: "MAN" },
        { label: "Woman", value: "WOMAN" },
      ],
    },
    { name: "dateOfBirth", type: "datepicker", label: "Date of birth" },
    { name: "email" },

    { name: "nation" },
    { name: "club" },
    { name: "city" },
    { name: "phone" },
    //{ name: 'confirm', type: 'checkbox', label: 'Confirm submit' }
  ];

  const buttons = [
    ({ isValid, pending }: FormState) => {
      console.log(isValid);
      console.log(pending);
      return (
        <Button key="submit" type="submit" className="mt-3">
          Register user
        </Button>
      );
    },
  ];

  const sendRegistration = async (data: Registration) => {
    console.log(data);
    await createRegistration(data);
  };  

  const render: FormRender = ({ fields, formState, trigger }) => {
    const navigateToStepTwo = async () => {
        const isValid = await trigger(['firstName', 'lastName', 'dateOfBirth', 'email', 'gender']);        
        if (isValid) {
            setStep(2);
        }
    };

    return (
      <div>
        {step === 1 && <div className="flex flex-col gap-3 pb-4">
          {fields.firstName}
          {fields.lastName}
          <div className="flex gap-3">
            <div className="flex-1">{fields.gender}</div>
            <div className="flex-1">{fields.dateOfBirth}</div>
          </div>
          {fields.email}
          <Button onClick={navigateToStepTwo}>Next step</Button>
        </div>}
        {step == 2 && <div className="flex flex-col gap-3 pb-4">
          {fields.nation}
          {fields.club}
          {fields.city}
          {fields.phone}
          <Button onClick={() => setStep(1)}>Back</Button>
          <Button type="submit">Finish registration</Button>
        </div>}
      </div>
    );
  };

  return (
    <>
      <Form
        fields={fields}
        validation={"CreateRegistration"}
        buttons={buttons}
        data={{ runId: 1 }}
        render={render}
        action={sendRegistration}
      />
    </>
  );
}
